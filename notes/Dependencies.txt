Dependecies - Deps. (aka deps and DEPS)
  This an ugly problem for cross compiling. It needs to be more developer
  friendly if you are going to distribute binaries that work.
  
  For a 'build from source' configuration, the deps would be all the
  apt-get or yum commands to execute before attempting a compile. 
  build-essential, gtk+-2-dev, curl-dev, jpeg-dev, ...., ruby-1.9.3 
  These deps could be part of the distribution (a .deb) or as now, just 
  a list on the website. Whatever is current for the users Linux. 
  
  For a binary Shoes distribution, it's more controlled and complex 
  because of that control. Think of the MingW32 version. It had a crapload
  of DLL's bundled up in the Shoes install package.  We have to do the
  same thing for Linux - include the shared libraries that the user might
  not have or different versions from what he does have.
  
  NOTE: For debian based linux, schroot and debootstrap works really
  well for building a 32 Shoes on a 64 bit system and a 64bit Shoes on
  a 64 bit. 
  
  NOTE: For the raspberry pi, a schroot and qemu really does work for 
  building ruby and running (it's not fast but you don't have do that part
  often). 
  
  MingGw is a different animal.  Ruby needs to be cross compiled and the
  gtk version does matter if you are using the bundled packages which is
  what I'm going to do. Building gtk from source would be even better and
  a whole lot of build infrastructue I'm not ready to create yet.
  
  I set up two directories in my chroot area.  NOTE: these are not real
  chroots. /srv/chroot/mingw32 and /srv/chroot/mingwgtk2. The first one
  if for Gtk3 and Ruby de-jure and should future Shoes releases. The second
  one is not going to get updated with Gtk2 patches or Ruby updates or 
  changes in dependencies. Frozen in time.  For windows, that frozen 
  configuration is what Federales is going to be.  Gtk2. Ruby 1.9.3 and 
  any source code builds that they need. Once that's done and finished
  then I'll think about Gtk3/Ruby2 and keeping the deps in sync with
  modern code. 

  
  Gtk is an issue here. Gtk2 is not installed on Raspbian, Debian Wheezy(7.1),
  or Ubuntu 13. Gtk3 is the new normal.  
  Although the Shoes Gtk3 code has some problems, it is good enough to run
  many of the samples and if I can't get Gtk3 working, it's all in vain,
  anyway.
  
  So, the cross compiles will only use GTK3 and include libraries for libs
  the user might not have (requires building ruby, curl, jpeg, ungif from source
  and for Windows - (Mingw32/64) gobject, glib, many more).  
  
  This link explains it better than I.
  http://www.gtk.org/download/win32.php 
  
 
Windows: No chroot for Windows.
  I'm going to use two directories one for GTK3 and one for GTK2
  Don't mix dll's between them if we avoid it. 

ZLIB ? SSL? 
  Does Shoes/curl really need this?
  
CURL
  Then there is libcurl.so  I'd rather not deal with ssl configurations
  so the curl to be included is pretty damn minimal.  
  Then we have issue that Windows doesn't use curl. I wish linux didn't.
  So. it's not a dependency for Windos.
  
RUBY  
  libruby.so - It really has to be compiled from source if you
  want to distribute a binary shoes and it has to be compiled correctly.
  I also had to install libyaml-dev and then build ruby.
==> Add /usr/lib/i386-linux-gnu/libyaml-0.so.2
   
UNGIF - GIF
  every modern linux has libgif.so and libungif is just a link to it. 
  Or vice versa. I don't care about old Political Correctness.
  I copy both of them.  

JPEG 
  Yes, not every linux has a complete jpeg library. 

GLib, Gobject and it's kinfolk. 
  Glib has some weird internal versioning mechanism. Don't fight it.

Cairo, Pango & cairoopango
  Sadly cairo.h is not part of Wheezy bare bones install.
  Yes, include them because you don't know if the users linux has the 
  versions we compiled against. 
  
Gtk 
  If I stick with Gtk+-2 then it's libs has to be included. 
  I wonder if Gtk3 works well enough on Windows for shoes. It does.
  Does gtk2 work well enough. Potential threading problems with Ruby and
  Gtk(x)
  

